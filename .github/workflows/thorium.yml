name: cisagov/thorium
on:
  push:
    branches:
      - main
      - thorium
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  packages: write
  security-events: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest  # Native amd64 GitHub runner
    steps:
      - name: Checkout Thorium Repository
        uses: actions/checkout@v4
        with:
          repository: cisagov/thorium
          path: thorium
          ref: main

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build --platform \
            --tag ghcr.io/${{ github.repository_owner }}/thorium:latest \
            thorium
          docker push ghcr.io/${{ github.repository_owner }}/thorium:latest

      - name: Logout from Docker Hub
        run: docker logout
  create-multiarch-manifest:
    needs: [build-and-push]
    runs-on: ubuntu-latest
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-platform manifest
        run: |
          docker manifest create ghcr.io/${{ github.repository_owner }}/thorium:latest \
            --amend ghcr.io/${{ github.repository_owner }}/thorium:latest
          
          docker manifest create ghcr.io/${{ github.repository_owner }}/thorium:latest \
            --amend ghcr.io/${{ github.repository_owner }}/thorium:latest
          
          docker manifest push ghcr.io/${{ github.repository_owner }}/thorium:latest

      - name: Logout from Docker Hub
        run: docker logout

  security-scan:
    needs: create-multiarch-manifest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Thorium Repository
        uses: actions/checkout@v4
        with:
          repository: cisagov/thorium
          path: thorium
          ref: main

      - name: Check ghcr.io/${{ github.repository_owner }}/thorium:latest image
        uses: snyk/actions/docker@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ghcr.io/${{ github.repository_owner }}/thorium:latest
          args: --file=./thorium/Dockerfile
          json: true

      - uses: garethr/snyk-to-sarif@master
      - uses: actions/upload-artifact@v4
        with:
          name: SARIF
          path: snyk.sarif

      - name: Upload SARIF Report to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

  sonarcloud-scan:
    needs: create-multiarch-manifest
    runs-on: ubuntu-latest
    steps:
      - name: SonarCloud Scan
        uses: sonarsource/sonarqube-scan-action@v4
        continue-on-error: true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=matusso
            -Dsonar.projectKey=docker-builds:thorium
            -Dsonar.verbose=true
            -Dsonar.projectName=thorium
            -Dsonar.languages=ruby
            -Dsonar.sources=thorium
            -Dsonar.exclusions=**/*.java,**/*.c,**/*.cpp,**/*.h,**/*.mm,**/*.m
            -Dsonar.c.file.suffixes=-
            -Dsonar.cpp.file.suffixes=-
            -Dsonar.objc.file.suffixes=-
