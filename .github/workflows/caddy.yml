name: Build Caddy (xcaddy) and Publish

on:
  push:
    tags:
      - main
      - caddy-v*.*.* # build on version tags like v1.0.0
  workflow_dispatch:

permissions:
  contents: write     # create release & upload assets
  packages: write     # push to GHCR

env:
  CADDY_VERSION: "v2.10.2"
  CADDY_MODULES: github.com/caddy-dns/cloudflare
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/caddy

jobs:
  # ---------- Build native binaries (Release assets) ----------
  build-binaries:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        goarch: [amd64, arm64, arm]
        include:
          - goarch: amd64
            suffix: x86_64
          - goarch: arm64
            suffix: arm64
          - goarch: arm
            goarm: 7
            suffix: armv7
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Install xcaddy
        run: go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest

      - name: Build caddy with Cloudflare (Linux/${{ matrix.goarch }})
        env:
          GOOS: linux
          GOARCH: ${{ matrix.goarch }}
          GOARM: ${{ matrix.goarm }}
        run: |
          mkdir -p dist
          BIN_NAME="caddy-linux-${{ matrix.suffix }}"
          if [ "${{ matrix.goarch }}" = "arm" ] && [ -n "${{ matrix.goarm }}" ]; then
            BIN_NAME="${BIN_NAME}"
          fi
          $(go env GOPATH)/bin/xcaddy build ${{ env.CADDY_VERSION }} \
            --output "dist/${BIN_NAME}" \
            --with ${{ env.CADDY_MODULES}}
          chmod +x "dist/${BIN_NAME}"

      - name: Generate checksums
        run: |
          cd dist
          sha256sum * > checksums.txt

      - name: Create GitHub Release (if tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts (for non-tag runs)
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v4
        with: 
          name: caddy-binaries
          path: dist/*

  # ---------- Build & push multi-arch Docker image to GHCR ----------
  docker:
    name: Build & push Docker image (GHCR)
    runs-on: ubuntu-latest
    needs: build-binaries
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Minimal Dockerfile is created on the fly so repo stays clean
      - name: Write Dockerfile
        run: |
          cat > Dockerfile <<'EOF'
          # Build custom caddy with Cloudflare module
          FROM caddy:builder AS builder
          RUN xcaddy build ${{ env.CADDY_VERSION }} \
              --with github.com/caddy-dns/cloudflare

          FROM caddy:latest
          COPY --from=builder /usr/bin/caddy /usr/bin/caddy
          # Optional: copy a default Caddyfile if your repo has one
          # COPY Caddyfile /etc/caddy/Caddyfile
          EOF

      - name: Compute tags
        id: meta
        run: |
          VERSION=${GITHUB_REF##*/}
          if [[ "${GITHUB_REF}" != refs/tags/* ]]; then
            VERSION="sha-${GITHUB_SHA::7}"
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "tags=${{ env.IMAGE_NAME }}:${VERSION},${{ env.IMAGE_NAME }}:latest" >> $GITHUB_OUTPUT

      - name: Build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          provenance: false
          sbom: false