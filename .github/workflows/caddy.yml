name: Build Caddy (xcaddy)

on:
  push:
    branches:
      - "main"
    paths:
      - .github/workflows/caddy.yml
      - "files/caddy/**"

  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  # Change this if you want a different package name in GHCR
  APP_SLUG: caddy
  CADDY_VERSION: "v2.10.2"
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/${{ github.repository }}${APP_SLUG}-${CADDY_VERSION}
  CADDY_MODULES: github.com/caddy-dns/cloudflare
  GO_VERSION: "1.22"
  

concurrency:
  # Avoid overlapping pushes from the same branch racing
  group: caddy-${{ github.ref }}
  cancel-in-progress: false

jobs:
  # ---------- Build native binaries (per-platform artifacts) ----------
  build-binaries:
    name: Build ${{ matrix.osarch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: linux
            goarch: amd64
            osarch: linux-amd64
            suffix: x86_64
          - goos: linux
            goarch: arm64
            osarch: linux-arm64
            suffix: arm64
          - goos: linux
            goarch: arm
            goarm: 7
            osarch: linux-armv7
            suffix: armv7

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-

      - name: Install xcaddy
        run: go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest

      - name: Compute safe branch slug
        id: branch
        run: |
          # turn "feature/my-branch" into "feature-my-branch"
          SAFE_BRANCH="$(echo "${GITHUB_REF_NAME}" | tr '/' '-' )"
          echo "safe=${SAFE_BRANCH}" >> "$GITHUB_OUTPUT"

      - name: Build caddy with Cloudflare (${{ matrix.osarch }})
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          GOARM: ${{ matrix.goarm }}
        run: |
          mkdir -p dist
          BIN="caddy-${{ steps.branch.outputs.safe }}-${{ matrix.osarch }}"
          $(go env GOPATH)/bin/xcaddy build ${{ env.CADDY_VERSION }}\
            --output "dist/${BIN}" \
            --with ${{ env.CADDY_MODULES }}
          chmod +x "dist/${BIN}"

          pushd dist >/dev/null
          sha256sum "${BIN}" > "${BIN}.sha256"
          tar -czf "${BIN}.tar.gz" "${BIN}"
          popd >/dev/null

      - name: Upload per-platform artifact (unique per branch + arch)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_SLUG }}-${{ steps.branch.outputs.safe }}-${{ matrix.osarch }}
          path: |
            dist/caddy-${{ steps.branch.outputs.safe }}-${{ matrix.osarch }}
            dist/caddy-${{ steps.branch.outputs.safe }}-${{ matrix.osarch }}.sha256
            dist/caddy-${{ steps.branch.outputs.safe }}-${{ matrix.osarch }}.tar.gz
          if-no-files-found: error
          retention-days: 14

  # ---------- Build & push multi-arch Docker image to GHCR ----------
  docker:
    name: Push GHCR image (multi-arch)
    runs-on: ubuntu-latest
    needs: build-binaries
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute tags from branch
        id: meta
        run: |
          SAFE_BRANCH="$(echo "${GITHUB_REF_NAME}" | tr '/' '-' )"
          SHORTSHA="${GITHUB_SHA::7}"
          echo "branch=${SAFE_BRANCH}" >> $GITHUB_OUTPUT
          echo "shortsha=${SHORTSHA}" >> $GITHUB_OUTPUT
          echo "tags=${{ env.IMAGE_NAME }}:${SAFE_BRANCH},${{ env.IMAGE_NAME }}:${SAFE_BRANCH}-${SHORTSHA}" >> $GITHUB_OUTPUT

      - name: Write Dockerfile
        run: |
          cat > Dockerfile <<'EOF'
          FROM caddy:builder AS builder
          # Build custom caddy with Cloudflare module
          RUN xcaddy build ${{ env.CADDY_VERSION }} --with github.com/caddy-dns/cloudflare
          FROM caddy:latest
          COPY --from=builder /usr/bin/caddy /usr/bin/caddy
          # COPY Caddyfile /etc/caddy/Caddyfile  # uncomment if present in repo
          EOF

      - name: Build & push (linux/amd64, arm64, arm/v7)
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.title=${{ env.APP_SLUG }}
            org.opencontainers.image.ref.name=${{ steps.meta.outputs.branch }}
          provenance: false
          sbom: false