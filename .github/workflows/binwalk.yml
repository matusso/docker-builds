name: ReFirmLabs/binwalk

on:
  push:
    branches:
      - main  # Change to your default branch if not main
    paths:
      - '.github/workflows/binwalk.yml'
      - 'files/binwalk/**'
permissions:
  contents: read
  packages: write  # Required for GitHub Container Registry
  security-events: write

env:
  RELEASE_VERSION: "v3.1.0"

jobs:
  build-and-push-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ReFirmLabs/binwalk Repository
        uses: actions/checkout@v4
        with:
          repository: ReFirmLabs/binwalk
          path: binwalk
          ref: ${{ env.RELEASE_VERSION }}
      - uses: snyk/actions/setup@master

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.build-cache
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Build and push Docker image to GitHub Container Registry
        run: |
          docker build --push --platform linux/amd64 \
            --tag ghcr.io/${{ github.repository_owner }}/binwalk:${{ env.RELEASE_VERSION }}-amd64 \
            --tag ghcr.io/${{ github.repository_owner }}/binwalk:latest-amd64 ./binwalk
          docker push ghcr.io/${{ github.repository_owner }}/binwalk:${{ env.RELEASE_VERSION }}-amd64
          docker push ghcr.io/${{ github.repository_owner }}/binwalk:latest-amd64

      - name: Logout from GitHub Container Registry
        run: docker logout ghcr.io

  build-and-push-arm64:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout ReFirmLabs/binwalk Repository
        uses: actions/checkout@v4
        with:
          repository: ReFirmLabs/binwalk
          path: binwalk
          ref: ${{ env.RELEASE_VERSION }}
      - uses: snyk/actions/setup@master

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push arm64 Docker image
        run: |
          docker build --platform linux/arm64 \
            --tag ghcr.io/${{ github.repository_owner }}/binwalk:${{ env.RELEASE_VERSION }}-arm64 \
            --tag ghcr.io/${{ github.repository_owner }}/binwalk:latest-arm64 ./binwalk
          docker push ghcr.io/${{ github.repository_owner }}/binwalk:${{ env.RELEASE_VERSION }}-arm64
          docker push ghcr.io/${{ github.repository_owner }}/binwalk:latest-arm64

      - name: Logout from Docker Hub
        run: docker logout

  create-multiarch-manifest:
    needs: [build-and-push-amd64, build-and-push-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-platform manifest
        run: |
          docker manifest create ghcr.io/${{ github.repository_owner }}/binwalk:${{ env.RELEASE_VERSION }} \
            --amend ghcr.io/${{ github.repository_owner }}/binwalk:${{ env.RELEASE_VERSION }}-amd64 \
            --amend ghcr.io/${{ github.repository_owner }}/binwalk:${{ env.RELEASE_VERSION }}-arm64
          
          docker manifest create ghcr.io/${{ github.repository_owner }}/binwalk:latest \
            --amend ghcr.io/${{ github.repository_owner }}/binwalk:latest-amd64 \
            --amend ghcr.io/${{ github.repository_owner }}/binwalk:latest-arm64
          
          docker manifest push ghcr.io/${{ github.repository_owner }}/binwalk:${{ env.RELEASE_VERSION }}
          docker manifest push ghcr.io/${{ github.repository_owner }}/binwalk:latest

  security-scan:
    needs: create-multiarch-manifest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ReFirmLabs/binwalk Repository
        uses: actions/checkout@v4
        with:
          repository: ReFirmLabs/binwalk
          path: binwalk
          ref: ${{ env.RELEASE_VERSION }}

      - name: Check ghcr.io/${{ github.repository_owner }}/binwalk:${{ env.RELEASE_VERSION }} image
        uses: snyk/actions/docker@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ghcr.io/${{ github.repository_owner }}/binwalk:${{ env.RELEASE_VERSION }}
          args: --file=./binwalk/Dockerfile
          json: true
      - uses: garethr/snyk-to-sarif@master
      - uses: actions/upload-artifact@v4
        with:
          name: SARIF
          path: snyk.sarif
      
      - name: Upload SARIF Report to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

  sonarcloud-binwalk:
    needs: create-multiarch-manifest
    runs-on: ubuntu-latest
    steps:
      # Checkout the binwalk  repository
      - name: Checkout binwalk Repository
        uses: actions/checkout@v4
        with:
          repository: ReFirmLabs/binwalk
          path: binwalk  # Optional: Clone into a specific directory
          ref: ${{ env.RELEASE_VERSION }}
            
      # SonarCloud Scan
      - name: SonarCloud Scan
        uses: sonarsource/sonarqube-scan-action@v6.0.0
        continue-on-error: true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=matusso
            -Dsonar.projectKey=docker-builds:binwalk
            -Dsonar.verbose=true
            -Dsonar.projectName=binwalk
            -Dsonar.sources=binwalk