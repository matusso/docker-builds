name: pocketbase/pocketbase

on:
  push:
    branches:
      - main  # Change to your default branch if not main
      - sonarcloud-pocketbase
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  packages: write
  security-events: write

env:
  RELEASE_VERSION: "v0.25.0"

jobs:
  build-and-push:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:        
      - uses: actions/checkout@v4
      - uses: snyk/actions/setup@master

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker image
        run: |
          docker buildx build --push \
            --build-arg "RELEASE_VERSION=${{ env.RELEASE_VERSION }}" \
            --tag ghcr.io/${{ github.repository_owner }}/pocketbase:${{ env.RELEASE_VERSION }} \
            --tag ghcr.io/${{ github.repository_owner }}/pocketbase:latest \
            --platform linux/amd64,linux/arm64 ./files/pocketbase
      
      - name: Logout from Docker Hub
        run: docker logout

      - name: Check ghcr.io/${{ github.repository_owner }}/pocketbase:${{ env.RELEASE_VERSION }} image
        uses: snyk/actions/docker@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ghcr.io/${{ github.repository_owner }}/pocketbase:${{ env.RELEASE_VERSION }}
          args: --file=./files/pocketbase/Dockerfile
          json: true
      - uses: garethr/snyk-to-sarif@master
      - uses: actions/upload-artifact@v4
        with:
          name: SARIF
          path: snyk.sarif
      
      - name: Upload SARIF Report to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

  sonarcloud-pocketbase:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      # Checkout the pocketbase  repository
      - name: Checkout pocketbase Repository
        uses: actions/checkout@v4
        with:
          repository: pocketbase/pocketbase
          path: pocketbase  # Optional: Clone into a specific directory
          ref: ${{ env.RELEASE_VERSION }}

      # Install dependencies
      - name: Install dependencies
        run: |
          cd pocketbase
          sudo apt update && sudo apt install -y \
            build-essential \
            git \
            autoconf \
            automake \
            libtool-bin \
            pkg-config \
            libcurl4-openssl-dev \
            libusb-1.0-0-dev \
            libssl-dev \
            udev \
            && sudo rm -rf /var/lib/apt/lists/*
            
      # SonarCloud Scan
      - name: SonarCloud Scan
        uses: sonarsource/sonarqube-scan-action@v4
        continue-on-error: true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=matusso
            -Dsonar.projectKey=docker-builds:pocketbase
            -Dsonar.verbose=true
            -Dsonar.projectName=pocketbase
            -Dsonar.sources=pocketbase