name: rapid7/metasploit-framework

on:
  push:
    branches:
      - main  # Change to your default branch if not main
  pull_request:
    branches:
      - main  # Change to your default branch if not main

permissions:
  contents: read
  packages: write
  security-events: write

jobs:
  build-and-push:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v3
      - uses: snyk/actions/setup@master

      - name: Set release version
        id: set_version
        run: echo "RELEASE_VERSION=6.4.38" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
  
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker image
        run: |
          docker buildx build --push \
            --tag ghcr.io/${{ github.repository_owner }}/metasploit-framework:${{ env.RELEASE_VERSION }} \
            --tag ghcr.io/${{ github.repository_owner }}/metasploit-framework:latest \
            --platform linux/amd64,linux/arm64 -f ./src/metasploit-framework/Dockerfile .

      - name: Logout from Docker Hub
        run: docker logout
      
      - name: Check ghcr.io/${{ github.repository_owner }}/metasploit-framework:${{ env.RELEASE_VERSION }} image
        uses: snyk/actions/docker@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ghcr.io/${{ github.repository_owner }}/metasploit-framework:${{ env.RELEASE_VERSION }}
          args: --file=./src/metasploit-framework/Dockerfile
          json: true
      - uses: garethr/snyk-to-sarif@master
      - uses: actions/upload-artifact@v4
        with:
          name: SARIF
          path: snyk.sarif
      
      - name: Upload SARIF Report to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

  # Job 2: SonarCloud Analysis
  sonarcloud:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Ruby environment (with bundler cache)
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'  # Adjust to your Ruby version
          bundler-cache: true  # This caches the installed gems

      # Set a custom directory for the Ruby dependencies
      - name: Set custom bundle path
        run: |
          echo "BUNDLE_PATH=$PWD/src/metasploit-framework" >> $GITHUB_ENV

      # Install dependencies into the custom folder
      - name: Install dependencies
        run: |
          bundle install --path $BUNDLE_PATH

      # Run tests (if any)
      - name: Run tests
        run: |
          bundle exec rake test
        env:
          CI: true

      # Run SonarCloud analysis
      - name: Run SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v3.1.0
        with:
          projectBaseDir: src/metasploit-framework
          args: >
            -Dsonar.organization=matusso
            -Dsonar.projectKey=matusso_docker-builds
            -Dsonar.verbose=true
            -Dsonar.exclusions=**/test/**,**/spec/**,**/vendor/**
            -Dsonar.language=ruby
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
